import * as fs from 'fs'
import * as path from 'path'
import * as assert from 'assert'
import { factory } from '../../src/adapters/factories'
import { ConfigService } from '../../src/services/config.service'
import { dropDatabase } from '../util/mongodb-util'

// public/private keys generated by:
// ssh-keygen -t rsa -b 4096 -m PEM -f authenzify-test-key

describe('Sign In', () => {
  const privateKey = fs
    .readFileSync(path.join(__dirname, '../keys/authenzify-test-key'), {
      encoding: 'ascii',
    })
    .replace(/\\n/gm, '\n')

  const config = {
    verifyUserBy: 'AUTO',
    passwordPolicy: '',
    usernamePolicy: '',
    storage: 'mongodb',
    uri: 'mongodb://localhost:27017/users-management-test',
    saltLength: 32,
    passwordPrivateKey: '',
    privateKey,
  }
  describe(`Verify user by 'AUTO'`, () => {
    it('Should sign up and return verified user', async () => {
      await dropDatabase(config.uri)
      const configService = new ConfigService(config)

      const services = await factory(configService)

      const user = await services.Users.signUp({
        email: 'haim@tictuk.com',
        password: '123456',
        firstName: 'Haim',
        lastName: 'Rubin',
      })

      const token = await services.Users.signIn({
        email: 'haim@tictuk.com',
        password: '123456',
      })

      console.log(token)
    })
  })
})
