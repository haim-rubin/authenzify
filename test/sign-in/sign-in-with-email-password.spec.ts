import { decode } from 'jsonwebtoken'
import * as assert from 'assert'
import { factory } from '../../src/adapters/factories'
import { ConfigService } from '../../src/services/config.service'
import { dropDatabase } from '../util/mongodb-util'
import { getConfig } from '../util/settings'
import { before } from 'mocha'

// public/private keys generated by:
// ssh-keygen -t rsa -b 4096 -m PEM -f authenzify-test-key

describe('Sign In', () => {
  let config
  before(async () => {
    config = await getConfig()
    await dropDatabase(config.uri)
  })

  describe(`Verify user by 'AUTO'`, () => {
    it('Should test Users.signUp and return verified user', async () => {
      const configService = new ConfigService(config)

      const services = await factory(configService)
      const credentials = { email: 'haim@tictuk.com', password: '1@Ea5S' }

      await services.Users.signUp({
        ...credentials,
        firstName: 'Haim',
        lastName: 'Rubin',
      })

      const token = await services.Users.signIn(credentials)
      const decoded = decode(token)
      assert.equal(decoded.email, credentials.email)
    })
  })
})
